// Generated by CoffeeScript 1.4.0
(function() {
  "use strict";
  var CustomCommandParser, exports, _ref,
    __slice = [].slice;

  var exports = (_ref = window.chat) != null ? _ref : window.chat = {};

  /*
   * Parses raw commands from the user. Used with the /raw command.
  */


  CustomCommandParser = (function() {

    function CustomCommandParser() {}

    CustomCommandParser.prototype.parse = function() {
      var args, channel, params;
      channel = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (args[1] === '-c') {
        params = this._mergeQuotedWords(args.slice(2));
        return [args[0].toUpperCase(), channel].concat(__slice.call(params));
      } else {
        params = this._mergeQuotedWords(args.slice(1));
        return [args[0].toUpperCase()].concat(__slice.call(params));
      }
    };

    CustomCommandParser.prototype._mergeQuotedWords = function(words) {
      var i, start, word, _i, _len;
      start = -1;
      for (i = _i = 0, _len = words.length; _i < _len; i = ++_i) {
        word = words[i];
        if (word[0] === '"' && start === -1) {
          start = i;
        }
        if (word[word.length - 1] === '"' && start !== -1) {
          words.splice(start, i - start + 1, words.slice(start, +i + 1 || 9e9).join(' '));
          words[start] = this._trimQuotes(words[start]);
          return this._mergeQuotedWords(words);
        }
      }
      return words;
    };

    CustomCommandParser.prototype._trimQuotes = function(word) {
      return word.slice(1, +(word.length - 2) + 1 || 9e9);
    };

    return CustomCommandParser;

  })();

  exports.customCommandParser = new CustomCommandParser();

}).call(this);
